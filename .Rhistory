packageVersions("dplyr")
packageVersion("dplyr")
cran <- tdbl_df(mydf)
cran <- tbl_df)mydf
cran <- tbl_df(mydf)
rm("mydf")
cran
?manip
select(cran, ip_id, pacakge, country)
select(cran, ip_id, pacakge, country)
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_rach)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(x:size))
select(cran,-(X:size))
filter(cran, package == "swirl")
?summarise_each
library(dplyr)
?summarise_each
h <- read.csv("81702NED_UntypedDataSet.csv")
View(h)
?read.csv
h <- read.csv("81702NED_UntypedDataSet.csv", sep=";")
View(h)
str(h)
summary(h)
str(f)
str(h)
m <- read.csv("81702NED_metadata.csv", sep=";")
m <- read.csv("81702NED_metadata.csv")
m <- data.frame(read.csv("81702NED_metadata.csv"))
m <- read.csv("81702NED_metadata.csv", col.names = FALSE, row.names=FALSE, sep=";")
m <- read.csv("81702NED_metadata.csv", col.names = FALSE, row.names=FALSE)
mean(h[7])
h[7]
prop(h[7])
type(h[7])
str(h[7])
mean(h[7])
?mean
ink <- as.numeric(h[7])
ink <- h[7]
ink
max(ink)
min(ink)
sum(ink)
?str
summary(str)
summary(ink)
mean(ink, is.na = TRUE)
mean(ink, is.na = FALSE)
?,eam
?mean
mean(ink, na.rm = TRUE)
typeof(ink)
as.numeric(ink)
View(ink)
?is.na
is.na(ink)
ink <- !is.na(ink)
ink
ink <- h[7]
ink2 <- ink[!is.na(ink)]
ink2
sum(ink2)
mean(ink2)
z <- h[,c(6,7)]
z
complete.cases(z)
y <- z[complete.cases(z)]
y <- z[complete.cases(z),]
z
?corr
?correl
?plot
plot(z[1],z[2])
plot(z)
?gggplot
?ggplot
?gplot
library()
library(ggplot2)
?ggplot2
plot(z)
cor(z)
cor(z[1],z[2])
z
plot(y)
cor(y)
unique(h[2])
sum(unique(h[2]))
str(unique(h[2]))
obs(unique(h[2]))
count(unique(h[2]))
?aggregate
i <- aggregate(h, by = h[2], FUN = "mean")
i
j <- h[,complete.cases(h)]
j <- h[complete.cases(h),]
i <- aggregate(j, by = j[2], FUN = "mean")
warnings()
j
View(j)
View(i)
ing <- read.csv("c:/admin/Downloads/ing.csv")
ing <- read.csv("c:/users/admin/Downloads/ing.csv")
str(ing)
ing2 <- ing[,c(1:10)]
str(ing2)
ing2 <- ing[,c(1:15)]
str(ing2)
ing2 <- ing2[,c(1,2,3,5,8,9,11,12,13,14)]
str(ing2)
subset(ing2, ing2[,3] >"7:00:00")
?as.time
?time
subset(ing2, ing2[,3] >"7:00:00")
?integer
as.integer(ing2[,3])
str(ing2)
as.integer(ing2[,4])
str(ing2)
ing2[,3]
as.integer(ing2[,3])
hpc <- read.table("household_power_consumption.txt")
str(hpc)
View(hpc)
View(hpc)
head(hpc)
hpc <- read.table("household_power_consumption.txt", sep = ";")
head(hpc)
hpc <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
View(hpc)
?read.table
object_size("household_power_consumption.txt")
library(pryr)
install.packages("pryr")
library(pryr)
object_size("household_power_consumption.txt")
object.size("household_power_consumption.txt")
?memory
object.size(hpc)
hpc <- hpc[hpc$Date = c("2007-02-01, 2007-02-02")]
hpc <- hpc[hpc$Date == c("2007-02-01, 2007-02-02")]
hpc
View(hpc)
hpc <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
View(hpc)
unique(hpc$Date)
hpc$Date["6/7/2010"]
hpc$Date =="1/2/2007"
hpc1 <- hpc[hpc$Date =="1/2/2007"]
hpc1 <- hpc[hpc$Date =="1/2/2007",]
hpc1 <- hpc[hpc$Date ==c("1/2/2007","2/2/2007",]
hpc1 <- hpc[hpc$Date ==c("1/2/2007","2/2/2007"),]
hpc1 <- hpc[hpc$Date ==c("1/2/2007","2/2/2007",]
hpc2 <- hpc[hpc$Date =="2/2/2007",]
hpc3 <- rbind(hpc1, hpc2)
View(hpc3)
hpc4 <- hpc3[,2:10]
View(hpc1)
hpc3 <- rbind(hpc1, hpc2, row.names=FALSE)
?row.namews
?row.names
row.names(hpc3)
row.names(hpc3) <- NULL
View(hpc3)
rm(hpc1)
rm(hpc2)
?as.Date
as.Date(hpc3$Date)
as.Date(hpc3$Date, "%d/%m/$y")
as.Date(hpc3$Date, format = "%d/%m/$y")
as.Date(hpc3$Date, format = "%d-%m-$Y")
View(hpc3)
as.Date(hpc3$Date)
hpc3$Date
unique("hpc3$Date")
unique(hpc3$Date)
as.Date(hpc3$Date, format = "%d-%m-%Y")
as.Date(hpc3$Date, format = "dd-mm-YYYY")
as.Date(hpc3$Date, "%d-%m-%Y")
as.Date(hpc3$Date, "%d/%m/%Y")
hpc3$Date <- as.Date(hpc3$Date, "%d/%m/%Y")
View(hpc3)
str(hpc3)
str(hpc)
?strptime
strptime(hpc3$Time, "%H:%M:%S")
hpc3$DateTime <- hpc$Date + hpc$Time
hpc3$DateTime <- cbing(hpc$Date, hpc$Time)
hpc3$DateTime <- cbind(hpc$Date, hpc$Time)
dates <- hpc3$Date
time <- hpc3$Time
datetime <- past(dates, time)
datetime <- paste(dates, time)
datetime
strptime(datetime, "%y/%m/%d %H:%M:%S")
strptime(datetime, "%H:%M:%S")
datetime
str(datetime)
strptime(datetime, "%y-%m-%d %H:%M:%S")
datetime
strptime(hpc3$Time, "%y-%m-%d %H:%M:%S")
strptime(hpc3$Time, "%H:%M:%S")
tail(hpc3)
hpc3[2881,] <- NULL
hpc3 <- hpc3[-2881,]
tail(hpc3)
head(hpc3)
as.POSIXct(paste(hpc3$date, hpc3$Time), format = "%Y-%m-%d %H:%M:%S"")
as.POSIXct(paste(hpc3$date, hpc3$Time), format = "%Y-%m-%d %H:%M:%S")
strptime(hpc3$Time, "%H<:%M:%S")
strptime(hpc3$Time, "%H:%M:%S")
hpc3$Time <- strptime(hpc3$Time, "%H:%M:%S")
as.POSIXct(paste(hpc3$date, hpc3$Time), format = "%Y-%m-%d %H:%M:%S")
datetime <- as.POSIXct(paste(hpc3$date, hpc3$Time), format = "%Y-%m-%d %H:%M:%S")
str(datetime)
hpc4 <- cbind(datetime, hpc3)
View(hpc4)
datetime <- as.POSIXct(paste(hpc3$Date, hpc3$Time), format = "%Y-%m-%d %H:%M:%S")
hpc4 <- cbind(datetime, hpc3)
View(hpc4)
datetime
?lty
?legend
library(nlme)
library(lattice)
xyplot(weight~Time|Diet, Bodyweight)
xyplot(weight~Time|Diet, BodyWeight)
str(BodyWeight)
?axis
?points
?lines
?panek.lmline
?panel.lmline
?axis
?print.trellis
?trellis.par.set
?splom
?par
?trellis.par.set
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
ggplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
?geom
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
?llines
?lattice
?swirl
library(swirl)
?swirl
?installCourses
?InstallCourses
install_from_swirl("Regression_Models")
swirl()
plot(child~parent, galton)
plot(jitter(child,4)~parent,galton)
regrline <- lm(child~parent, galton)
abline(regrline, lwd=3, col= 'red')
summary(regrline)
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
set.seed(3435)
trainIndicator <- rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator == 1,]
testSpam = spam[trainIndicator == 0,]
names(trainSpam)
head(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1)~trainSpam$type)
plot(log10(trainSpam[,1:4]+1))
hCluster = hclust(dist(t(trainSpam[,1:57])))
plot(hCluster)
hCluster = hclust(dist(t(log10(trainSpam[,1:57])))
hCluster = hclust(dist(t(log10(trainSpam[,1:57]+1)))
hCluster = hclust(dist(t(log10(trainSpam[,1:57]+1))))
plot(hCluster)
hCluster = hclust(dist(t(log10(trainSpam[,1:55]+1))))
plot(hCluster)
ls()
ls
getwd()
ls()
dir()
dir *.csv
SportMeta <- readcsv("70256NED_metadata.csv")
SportMeta <- read.csv("70256NED_metadata.csv")
?read.csv
SportMeta <- read.csv("70256NED_metadata.csv", header = TRUE, sep=",")
SportMeta <- read.csv("70256NED_metadata.csv", header = FALSE, sep=",")
View(SportMeta)
SportData <- read.csv("70256NED_UntypedDataSet.csv", header = FALSE, sep=",")
View(SportData)
SportData <- read.csv("70256NED_UntypedDataSet.csv", header = FALSE, sep=";")
View(SportData)
SportData <- read.csv("70256NED_UntypedDataSet.csv", header = TRUE, sep=";")
View(SportData)
wd <- "c:/maca/Rdata/RepRes1" #the directory where I unzipped the datafiles
setwd(wd) #is now my working directory
Sys.setlocale("LC_TIME", "C") # change timesettings to English, otherwise the names of the days appeared in Dutch
library(knitr) #load knitr, assuming the package is installed
library(markdown) # dito for markdown
activity <- read.csv("activity.csv")
df <- activity[complete.cases(activity),] #only use the rows without missing values
totals <- ddply(df, .(date), summarize, steps=sum(steps))
?ddply
library(plyr)
totals <- ddply(df, .(date), summarize, steps=sum(steps))
View(totals)
)
hist(totals$steps)
ddply(df, .(date), summarize, steps=mean(steps))
summary(df)
View(activity)
View(df)
ddply(df, ~interval, summarise, mean = mean(steps))
?plot
plot(df$interval, ddply(df, ~interval, summarise, mean = mean(steps)), type = "l")
plot(unique(df$interval), ddply(df, ~interval, summarise, mean = mean(steps)), type = "l")
unique(df$interval)
plot(ddply(df, ~interval, summarise, mean = mean(steps)), type = "l")
?max
max(ddply(df, ~interval, summarise, mean = mean(steps)))
interval <- ddply(df, ~interval, summarise, mean = mean(steps))
View(interval)
max(interval$mean)
interval$interval=max(interval$mean)
interval <- ddply(df, ~interval, summarise, mean = mean(steps))
interval$interval[interval$interval==max(interval$mean)]
interval$interval[interval$mean==max(interval$mean)]
wd <- "c:/maca/Rdata/RepRes1" #the directory where I unzipped the datafiles
max(ddply(df, ~interval, summarise, mean = mean(steps)))
interval$interval[interval$mean==max(interval$mean)] #which interval contains the max number of steps
?length
length(activity)
nrow(activity)
nrow(activity) - nrow(df)
?impute.mean
?replace
View(activity)
ff <- replace(activity, is.na(activity$steps), interval)
ff <- replace(activity, is.na(activity$steps), interval$mean)
ff <- replace(activity, is.na(activity$steps), 8)
is.na(activity$steps)
ff <- replace(activity, is.na(activity$steps)=TRUE, 8)
ff <- replace(activity, is.na(activity$steps)==TRUE, 8)
ff <- replace(activity, activity$steps[is.na(activity$steps)], 8)
activity$steps[is.na(activity$steps)]
activity$steps[is.na(activity$steps),]
activity$steps[is.na(activity$steps)]
activity$steps[!is.na(activity$steps)]
ff <- replace(activity$steps, is.na(activity$steps), 8)
ff
ff <- replace(activity$steps, is.na(activity$steps), interval$steps)
ff <- replace(activity$steps, is.na(activity$steps), interval$steps[interval$interval==activity$interval])
interval$interval==activity$interval
interval$steps[interval$interval==activity$interval]
ff <- replace(activity$steps, is.na(activity$steps), interval$mean[interval$interval==activity$interval])
interval$mean[interval$interval==activity$interval]
ff <- replace(activity$steps, is.na(activity$steps), interval$mean[interval$interval==activity$interval])
?subset
?rbind
ff <- rbind(activity, interval)
ff <- cbind(activity, interval)
View(ff)
ff <- merge(activity, interval, by ="interval")
View(ff)
replace(ff, is.na(ff$steps), ff$mean)
is.na(ff$steps)
?replace
ff$steps[is.na(ff$steps)] <- ff$mean[is.na(ff$steps)]
View(ff)
act_all <- merge(activity, interval, by ="interval")
act_all$steps[is.na(act_all$steps)] <- act_all$mean[is.na(act_all$steps)]
View(act_all)
act_all$mean <- NULL
View(act_all)
order(act_all[,3], act_all[,2])
order(act_all[,3], act_all[,2])
View(act_all)
act_all <- merge(activity, interval, by ="interval")
act_all$steps[is.na(act_all$steps)] <- act_all$mean[is.na(act_all$steps)]
act_all$mean <- NULL
View(act_all)
str(act_all)
hist(act_all$steps)
summary(act_all)
summary(act_cc)
summary(df)
?weekdays
weekdays(act_all$date)
as.date(as.character(act_all$date))
?as.date
as.Date(as.character(act_all$date))
str(act_all)
weekdays(act_all$date)
isWeekday(act_all$date)
isWeekday(act_all$date)
?as.Date
as.Date(as.character(act_all$date), "%y-%m-%d")
View(act_all)
as.Date(as.character(act_all$date), "%y/%m/%d")
as.Date(act_all$date, "%y/%m/%d")
as.Date(as.character(act_all$date), "%y/%m/%d")
act_all <- merge(activity, interval, by ="interval")
act_all$steps[is.na(act_all$steps)] <- act_all$mean[is.na(act_all$steps)]
act_all$mean <- NULL
str(act_all)
as.Date(act_all$date, format="%Y/%m/%d")
View(act_all)
str(act_all)
as.Date(act_all$date, format="%Y-%m-%d")
str(act_all)
View(act_all)
weekdays(act_all$date)
class(act_all$date)
as.Date(act_all$date, format="%Y-%m-%d")
class(act_all$date)
as.Date(as.character(act_all$date), format="%Y-%m-%d")
class(act_all$date)
as.Date(as.character(act_all$date), format='%Y-%m-%d')
class(act_all$date)
as.Date(as.character(act_all$date), format='%y-%m-%d')
as.Date(as.character(act_all$date), format='%Y-%m-%d')
as.Date(as.character(act_all$date), format='%YY-%m-%d')
as.Date(as.character(act_all$date), format='%Y-%m-%d')
as.Date(as.character(act_all$date), format='%Y-%M-%d')
as.Date(as.character(act_all$date), format='%Y-%m-%d')
class(act_all$date)
library(lubridate)
?lubridate
str(act_all)
?strptime
strptime(act_all$date, format='%Y-%m-%d')
class(act_all$date)
act_all$date <- as.Date(as.character(act_all$date), format='%Y-%m-%d')
class(act_all$date)
weekdays(act_all$date)
act_all$weekday <- weekdays(act_all$date)
View(act_all)
act_all$weekday[act_all$weekday = c("Saturday", "Sunday")] <- "Weekend"
act_all$weekday[act_all$weekday == c("Saturday", "Sunday")] <- "Weekend"
View(act_all)
act_all$weekday <- weekdays(act_all$date)
View(act_all)
act_all$weekday[act_all$weekday == "Saturday" | act_all$weekday == "Sunday")] <- "Weekend"
act_all$weekday[act_all$weekday == "Saturday" | "Sunday")] <- "Weekend"
act_all$weekday[act_all$weekday == "Saturday" | "Sunday"] <- "Weekend"
act_all$weekday[act_all$weekday == "Saturday" | act_all$weekday =="Sunday"] <- "Weekend"
View(act_all)
act_all$weekday[act_all$weekday !== "Weekend"] <- "Weekday"
act_all$weekday[act_all$weekday != "Weekend"] <- "Weekday"
View(act_all)
par(mfrow=c(2,1))
plot(ddply(act_all$weekdays == "Weekend", ~interval, summarise, mean = mean(steps)), type = "l")
?plot
?ggplot
library(ggplot)
library(ggplot2)
?ggplot
ggplot(ddply(act_all$weekdays == "Weekend", ~interval, summarise, mean = mean(steps)), type = "l")
plot(ddply(act_all, ~interval, summarise, mean = mean(steps)), type = "l")
?plot
plot(ddply(act_all[act_all$weekday=="Weekend"], ~interval, summarise, mean = mean(steps)), type = "l")
?stat_summary
weekdays <- ddply(act_all, ~interval, summarise, mean = mean(steps))
View(weekdays)
weekdays <- act_all[act_all$weekday=="Weekday"]
weekdays <- act_all[act_all$weekday=="Weekday"]
View(act_all)
weekdays <- act_all[act_all$weekday=="Weekday"]
act_all$weekday
act_all$weekday=="Weekday"
weekdays <- act_all[act_all$weekday=="Weekday",]
weekends <- act_all[act_all$weekday=="Weekend",]
plot(ddply(weekdays, ~interval, summarise, mean = mean(steps)), type = "l")
plot(ddply(weekends, ~interval, summarise, mean = mean(steps)), type = "l")
plot(ddply(weekdays, ~interval, summarise, mean = mean(steps)), type = "l")
?par
par(mfrow=c(2,1), height = 6)
?par
plot(ddply(weekdays, ~interval, summarise, mean = mean(steps)), type = "l", height =6)
plot(ddply(weekdays, ~interval, summarise, mean = mean(steps)), type = "l", height =10)
plot(ddply(weekdays, ~interval, summarise, mean = mean(steps)), type = "l", height =20)
source('C:/maca/Rdata/RepRes1/RepRes_assignment1.R')
warnings()
source('C:/maca/Rdata/RepRes1/RepRes_assignment1.R')
rm("wd")
