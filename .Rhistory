str(hpc)
?strptime
strptime(hpc3$Time, "%H:%M:%S")
hpc3$DateTime <- hpc$Date + hpc$Time
hpc3$DateTime <- cbing(hpc$Date, hpc$Time)
hpc3$DateTime <- cbind(hpc$Date, hpc$Time)
dates <- hpc3$Date
time <- hpc3$Time
datetime <- past(dates, time)
datetime <- paste(dates, time)
datetime
strptime(datetime, "%y/%m/%d %H:%M:%S")
strptime(datetime, "%H:%M:%S")
datetime
str(datetime)
strptime(datetime, "%y-%m-%d %H:%M:%S")
datetime
strptime(hpc3$Time, "%y-%m-%d %H:%M:%S")
strptime(hpc3$Time, "%H:%M:%S")
tail(hpc3)
hpc3[2881,] <- NULL
hpc3 <- hpc3[-2881,]
tail(hpc3)
head(hpc3)
as.POSIXct(paste(hpc3$date, hpc3$Time), format = "%Y-%m-%d %H:%M:%S"")
as.POSIXct(paste(hpc3$date, hpc3$Time), format = "%Y-%m-%d %H:%M:%S")
strptime(hpc3$Time, "%H<:%M:%S")
strptime(hpc3$Time, "%H:%M:%S")
hpc3$Time <- strptime(hpc3$Time, "%H:%M:%S")
as.POSIXct(paste(hpc3$date, hpc3$Time), format = "%Y-%m-%d %H:%M:%S")
datetime <- as.POSIXct(paste(hpc3$date, hpc3$Time), format = "%Y-%m-%d %H:%M:%S")
str(datetime)
hpc4 <- cbind(datetime, hpc3)
View(hpc4)
datetime <- as.POSIXct(paste(hpc3$Date, hpc3$Time), format = "%Y-%m-%d %H:%M:%S")
hpc4 <- cbind(datetime, hpc3)
View(hpc4)
datetime
?lty
?legend
library(nlme)
library(lattice)
xyplot(weight~Time|Diet, Bodyweight)
xyplot(weight~Time|Diet, BodyWeight)
str(BodyWeight)
?axis
?points
?lines
?panek.lmline
?panel.lmline
?axis
?print.trellis
?trellis.par.set
?splom
?par
?trellis.par.set
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
ggplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
?geom
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
?llines
?lattice
?swirl
library(swirl)
?swirl
?installCourses
?InstallCourses
install_from_swirl("Regression_Models")
swirl()
plot(child~parent, galton)
plot(jitter(child,4)~parent,galton)
regrline <- lm(child~parent, galton)
abline(regrline, lwd=3, col= 'red')
summary(regrline)
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
set.seed(3435)
trainIndicator <- rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator == 1,]
testSpam = spam[trainIndicator == 0,]
names(trainSpam)
head(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1)~trainSpam$type)
plot(log10(trainSpam[,1:4]+1))
hCluster = hclust(dist(t(trainSpam[,1:57])))
plot(hCluster)
hCluster = hclust(dist(t(log10(trainSpam[,1:57])))
hCluster = hclust(dist(t(log10(trainSpam[,1:57]+1)))
hCluster = hclust(dist(t(log10(trainSpam[,1:57]+1))))
plot(hCluster)
hCluster = hclust(dist(t(log10(trainSpam[,1:55]+1))))
plot(hCluster)
ls()
ls
getwd()
ls()
dir()
dir *.csv
SportMeta <- readcsv("70256NED_metadata.csv")
SportMeta <- read.csv("70256NED_metadata.csv")
?read.csv
SportMeta <- read.csv("70256NED_metadata.csv", header = TRUE, sep=",")
SportMeta <- read.csv("70256NED_metadata.csv", header = FALSE, sep=",")
View(SportMeta)
SportData <- read.csv("70256NED_UntypedDataSet.csv", header = FALSE, sep=",")
View(SportData)
SportData <- read.csv("70256NED_UntypedDataSet.csv", header = FALSE, sep=";")
View(SportData)
SportData <- read.csv("70256NED_UntypedDataSet.csv", header = TRUE, sep=";")
View(SportData)
wd <- "c:/maca/Rdata/RepRes1" #the directory where I unzipped the datafiles
setwd(wd) #is now my working directory
Sys.setlocale("LC_TIME", "C") # change timesettings to English, otherwise the names of the days appeared in Dutch
library(knitr) #load knitr, assuming the package is installed
library(markdown) # dito for markdown
library(plyr)
library(lubridate)
library(ggplot2)
activity <- read.csv("activity.csv")
act_cc <- activity[complete.cases(activity),] #only use the rows without missing values
totals <- ddply(act_cc, .(date), summarize, steps=sum(steps))
View(totals)
hist(totals$steps)
meansteps <- mean(totals$steps)
mediansteps <- median(totals$steps)
summary(totals)
wd <- "c:/maca/Rdata/RepData_PeerAssessment1" #the directory where I unzipped the datafiles
setwd(wd) #is now my working directory
wd <- "c:/maca/Rdata/RepRes1" #the directory where I unzipped the datafiles
setwd(wd) #is now my working directory
Sys.setlocale("LC_TIME", "C") # change timesettings to English, otherwise the names of the days appeared in Dutch
library(knitr) #load knitr, assuming the package is installed
library(markdown) # dito for markdown
library(plyr)
library(lubridate)
library(ggplot2)
activity <- read.csv("activity.csv")
act_cc <- activity[complete.cases(activity),] #only use the rows without missing values
totals <- ddply(act_cc, .(date), summarize, steps=sum(steps))
hist(totals$steps)
meansteps <- mean(totals$steps)
mediansteps <- median(totals$steps)
ddply(act_cc, .(date), summarize, steps=mean(steps))
ddply(act_cc, .(date), summarize, steps=median(steps))
summary(act_cc)
interval <- ddply(act_cc, ~interval, summarise, mean = mean(steps)) #get the averages per interval
plot(ddply(act_cc, ~interval, summarise, mean = mean(steps)), type = "l") #time series plot of 5-minute interval
interval$interval[interval$mean==max(interval$mean)] #which interval contains the max number of steps
nrow(activity) - nrow(act_cc) #the number of rows with NAs
## I want to use the average for that 5-minute interval to replace NAs
act_all <- merge(activity, interval, by ="interval")
act_all$steps[is.na(act_all$steps)] <- act_all$mean[is.na(act_all$steps)]
act_all$mean <- NULL
#order(act_all[,3], act_all[,2])
hist(act_all$steps)
summary(act_all)
act_all$date <- as.Date(as.character(act_all$date), format='%Y-%m-%d')
act_all$weekday <- weekdays(act_all$date)
act_all$weekday[act_all$weekday == "Saturday" | act_all$weekday =="Sunday"] <- "Weekend"
act_all$weekday[act_all$weekday != "Weekend"] <- "Weekday"
View(act_all)
plotweekdays <- ggplot(act_all, aex(x=interval, y=steps))+
facet_grid(.~weekday)
lotweekdays <- ggplot(act_all, aes(x=interval, y=steps))+
facet_grid(.~weekday)
plot(plotweekdays)
plotweekdays <- ggplot(act_all, aes(x=interval, y=steps))+
facet_grid(.~weekday)
plot(plotweekdays)
plotweekdays <- ggplot(act_all, aes(x=interval, y=steps))+
eom_bar(stat="identity", col="black", fill="white")+ # I want bars that start on the x-axis
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+ # the years should be displayed vertically
facet_grid(.~weekday)+
labs(title= "Mean number of steps")+
labs(x= "Steps", y = "Frequency")
plot(plotweekdays)
print(plotweekdays)
?ggplot
?geom_line
plotweekdays <- ggplot(act_all, aes(x=interval, y=steps))+
geom_line(col="black", fill="white")+ # I want bars that start on the x-axis
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+ # the years should be displayed vertically
facet_grid(.~weekday)+
labs(title= "Mean number of steps")+
labs(x= "Steps", y = "Frequency")
print(plotweekdays)
?facet_grid
plotweekdays <- ggplot(act_all, aes(x=interval, y=steps))+
geom_line(col="black", fill="white")+ # I want bars that start on the x-axis
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+ # the years should be displayed vertically
facet_grid(~weekday.)+
labs(title= "Mean number of steps")+
labs(x= "Interval", y = "Number of steps"")
print(plotweekdays)
plotweekdays <- ggplot(act_all, aes(x=interval, y=steps))+
geom_line(col="black", fill="white")+ # I want bars that start on the x-axis
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+ # the years should be displayed vertically
facet_grid(~weekday.)+
labs(title= "Mean number of steps")+
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(act_all, aes(x=interval, y=steps))+
geom_line()+ # I want bars that start on the x-axis
labs(title= "Mean number of steps")+
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(act_all, aes(x=interval, y=steps))+
geom_line()+
facet_grid(~weekday.) +
labs(title= "Mean number of steps")+
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(act_all, aes(x=interval, y=steps))+
geom_line()+
facet_grid(.~weekday) +
labs(title= "Mean number of steps")+
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(act_all, aes(x=interval, y=steps))+
type = l +
geom_line()+
facet_grid(.~weekday) +
labs(title= "Mean number of steps")+
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
ff <- ddply(act_all, c("interval", "weekday"), summarise, mean = mean(steps))
View(ff)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line()+
facet_grid(.~weekday) +
labs(title= "Mean number of steps")+
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line()+
facet_grid(~weekday.) +
labs(title= "Mean number of steps")+
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line()+
facet_grid(.~weekday) +
labs(title= "Mean number of steps")+
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
?facet_grid
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line()+
facet_grid(weekday~.) +
labs(title= "Mean number of steps")+
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line()+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
?ggplot
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="blue")+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
?colour
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue")+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue")+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")+
panel.grid.major = theme_blank()+
panel.grid.minor = theme_blank()
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue"),  panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank() +
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue")+
plot.background = element_blank()+
panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank() +
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue")+
theme(plot.background = element_blank())+
panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank() +
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue")+
theme(plot.background = element_blank())+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
?theme
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue")+
theme(panel.background = element_blank())+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
?geom_line
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 3)+
theme(panel.background = element_blank())+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 1)+
theme(panel.background = element_blank())+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.5)+
theme(panel.background = element_blank())+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank())+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border="black")+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(colour ="black", size = 0.5, linetype="solid")+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(colour ="black", size = 0.5, linetype="solid")+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(colour ="black", size = 0.5, linetype="solid"))+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(#panel.background = element_blank(),
panel.border= element_rect(colour ="black", size = 0.5, linetype="solid"))+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
#theme(panel.background = element_blank(),
#     panel.border= element_rect(colour ="black", size = 0.5, linetype="solid"))+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank())+
#     panel.border= element_rect(colour ="black", size = 0.5, linetype="solid"))+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank()),
panel.border= element_rect(fill=NA, colour ="black", size = 0.5, linetype="solid")))+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(fill=NA, colour ="black", size = 0.5, linetype="solid")))+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(fill=NA, colour ="black", size = 0.5, linetype="solid"))+
facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(fill=NA, colour ="black", size = 0.5, linetype="solid"))+
facet_wrap(~weekday. ncol =1)+
#facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(fill=NA, colour ="black", size = 0.5, linetype="solid"))+
facet_wrap(~weekday, ncol =1)+
#facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
?facet_wrap
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(fill=NA, colour ="black", size = 0.5, linetype="solid"))+
facet_wrap(~weekday, ncol =1, colour="red")+
#facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
?element_rect
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(fill=NA, colour ="black", size = 0.5, linetype="solid"))+
facet_wrap(~weekday, ncol =1, element_rect(colour="red"))+
#facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(fill=NA, colour ="black", size = 0.5, linetype="solid"))+
facet_wrap(~weekday, ncol = 1, element_rect(colour="red"))+
#facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(fill=NA, colour ="black", size = 0.5, linetype="solid"))+
facet_wrap(~weekday, ncol = 1)+
#facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(fill=NA, colour ="black", size = 0.5, linetype="solid"))+
facet_wrap(~weekday, ncol = 1)+
theme(strip.background = element_rect(fill="orange"))+
#facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(ff, aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(fill=NA, colour ="black", size = 0.5, linetype="solid"))+
facet_wrap(~weekday, ncol = 1)+
theme(strip.background = element_rect(fill="peachpuff"))+
#facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
plotweekdays <- ggplot(act_all_mean , aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(fill=NA, colour ="black", size = 0.5, linetype="solid"))+
facet_wrap(~weekday, ncol = 1)+
theme(strip.background = element_rect(fill="peachpuff"))+
#facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
act_all_mean <- ddply(act_all, c("interval", "weekday"), summarise, mean = mean(steps))
plotweekdays <- ggplot(act_all_mean , aes(x=interval, y=mean))+
geom_line(colour="cornflowerblue", size = 0.75)+
theme(panel.background = element_blank(),
panel.border= element_rect(fill=NA, colour ="black", size = 0.5, linetype="solid"))+
facet_wrap(~weekday, ncol = 1)+
theme(strip.background = element_rect(fill="peachpuff"))+
#facet_grid(weekday~.) +
labs(x= "Interval", y = "Number of steps")
print(plotweekdays)
